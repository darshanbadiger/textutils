{"version":3,"sources":["components/Alert.js","components/About.js","components/Navbar.js","components/Textform.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","react_default","a","createElement","style","height","alert","className","concat","typ","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","About","mystyle","color","mode","backgroundColor","Fragment","id","type","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","aria-labelledby","data-bs-parent","Navbar","href","title","aria-label","aria-current","aboutText","onClick","togglemode","htmlFor","Textform","_useState","useState","_useState2","Object","slicedToArray","text","setText","heading","placeholder","value","onChange","event","console","log","target","rows","disabled","length","newtext","showAlert","document","getElementById","select","navigator","clipboard","writeText","getSelection","removeAllRanges","split","join","filter","element","defaultProps","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.ebbbad60.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize=(word)=>{\r\n        const lower=word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n       }\r\n  return (\r\n    <div style={{height:'50px'}}>\r\n        {props.alert &&<div className={`alert alert-${props.alert.typ} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitalize(props.alert.typ)}: </strong> {props.alert.msg}\r\n        {/* <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\r\n        </div>}\r\n        </div>\r\n  )\r\n}\r\n","// import React, { useState } from 'react'\r\nimport React from 'react'\r\n\r\nexport default function About(props) {\r\n\r\n    // const [mystyle, setMystyle]=useState({\r\n    //     color: 'black',\r\n    //     backgroundColor:'white'\r\n    // })\r\n    let mystyle={\r\n        color:props.mode === 'dark'?'white':'black',\r\n        backgroundColor:props.mode ==='dark'?'#006284':'white',\r\n\r\n    }\r\n  //  const [btntext, setbtntext]=useState(\"Enable Dark Mode\")\r\n\r\n    // const togglebutton=()=>{\r\n    //     if(mystyle.color ==='white'){\r\n    //         setMystyle({\r\n    //             color: 'black',\r\n    //             backgroundColor:'white'\r\n    //     })\r\n    //     setbtntext(\"Enable light Mode\")\r\n    //     }\r\n    //     else{\r\n    //         setMystyle({\r\n    //             color:'white',\r\n    //             backgroundColor:'black'\r\n    //         })\r\n    //         setbtntext(\"Enable Dark Mode\")\r\n    //     }\r\n\r\n    // }\r\n    return (\r\n        <>\r\n       \r\n        <div className=\"container my-3\" style={{color:props.mode === 'dark'?'white':'black'}}>\r\n        <h1>About Us</h1>\r\n            <div className=\"accordion\" id=\"accordionExample\" style={mystyle}>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                        <button className=\"accordion-button\" style={mystyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"false\" aria-controls=\"collapseOne\">\r\n                            Accordion Item #1\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={mystyle}>\r\n                            <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element.\r\n                             These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. \r\n                             It's also worth noting that just about any \r\n                            HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                        <button className=\"accordion-button collapsed\" style={mystyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                            Accordion Item #2\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={mystyle}>\r\n                            <strong>This is the second item's accordion body.</strong> It is hidden by default,\r\n                             until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance,\r\n                              as well as the showing and hiding via CSS transitions. \r\n                             You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>,\r\n                              though the transition does limit overflow.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                        <button className=\"accordion-button collapsed\" style={mystyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                            Accordion Item #3\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={mystyle}>\r\n                            <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element.\r\n                             These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* <button onClick={togglebutton} className=\"btn btn-outline-secondary my-3\">{btntext}</button> */}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","\r\nimport React from \"react\";\r\nimport propTypes from \"prop-types\";\r\n\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <>\r\n       \r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n                <div className=\"container-fluid\">\r\n                    <a className={`navbar-brand text-${props.mode==='light'?'dark':'light'}`} href=\"/\">{props.title}</a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"/navbarSupportedContent\" \r\n                    aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                            <li className=\"nav-item\">\r\n                                <a className={`nav-link active text-${props.mode==='light'?'dark':'light'}`} aria-current=\"page\" href =\"/\">Home</a>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className={`nav-link text-${props.mode==='light'?'dark':'light'}`} href=\"/\">{props.aboutText}</a>\r\n                            </li>\r\n                            <li className=\"nav-item dropdown\">\r\n                                <a className={`nav-link dropdown-toggle text-${props.mode==='light'?'dark':'light'}`} href=\"/\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                    Services\r\n                                </a>\r\n                                <ul className=\"dropdown-menu\">\r\n                                    <li><a className=\"dropdown-item\" href=\"/\">Service 1</a></li>\r\n                                    <li><a className=\"dropdown-item\" href=\"/\">Service 2</a></li>\r\n                                </ul>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className={`nav-link text-${props.mode==='light'?'dark':'light'}`} href=\"/\">Contact Us</a>\r\n                            </li>\r\n                        </ul>\r\n                        <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n                            <input className=\"form-check-input\" onClick= {props.togglemode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n                            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable {props.mode==='light'?'dark':'light'} Mode</label>\r\n                        </div>\r\n                        {/* <form className=\"d-flex\" role=\"search\">\r\n                            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                            <button className=\"btn btn-outline-primary\" type=\"submit\">Search</button>\r\n                        </form> */}\r\n                    </div>\r\n                </div>\r\n                \r\n            </nav>\r\n        </>\r\n    )\r\n}\r\n\r\n//propTypes:\r\n\r\nNavbar.propTypes = {title: propTypes.string.isRequired, //title is required\r\naboutText:propTypes.string}\r\n\r\n//When values are not passed navbar uses default values\r\nNavbar.defaultProps = {title: 'Title Here',\r\naboutText:'About Text Here'}\r\n","import React, {useState} from 'react'\r\n\r\nexport default function Textform(props) {\r\n    // const [text, setText] = useState('Enter text here');\r\n    const [text, setText] = useState('');\r\n    // text = \"Chnage the values\";//wrong way to change the text\r\n    // setText(\"Change the text\") //correct way to change the text\r\n\r\n    const handleUpClick=()=>{\r\n        let newtext = text.toUpperCase();\r\n        console.log(newtext);\r\n        setText(newtext);\r\n        props.showAlert(\"Concertd to Uppercase!\", \"success\")\r\n        // console.log(\"Uppercase Clicked \");\r\n        // setText(\"You have clicked on 'Uppercase Conversion'\")\r\n    }\r\n    const handleLowerClick=()=>{\r\n      let newtext = text.toLowerCase();\r\n      setText(newtext);\r\n      props.showAlert(\"Concertd to Lowercase!\", \"success\")\r\n    }\r\n   \r\n    const handleCapitalClick=()=>{\r\n     \r\n    }\r\n\r\n    const handleCopyClick=()=>{\r\n      let newtext = document.getElementById(\"mybox\");\r\n      newtext.select();\r\n\r\n      navigator.clipboard.writeText(newtext.value);\r\n      document.getSelection().removeAllRanges();\r\n      props.showAlert(\"Copied to CLipboard!\", \"success\")\r\n    }\r\n\r\n    const handleremovespace=()=>{\r\n      let newtext = text.split(/[ ]+/);\r\n      setText(newtext.join(\" \"))\r\n      props.showAlert(\"Removed Extra spaces!\", \"success\")\r\n    }\r\n    const handleClearClick=()=>{\r\n      let newtext = '';\r\n      setText(newtext);\r\n      props.showAlert(\"All Clear!\", \"success\")\r\n    }\r\n    \r\n    const handleOnChange=(event)=>{\r\n        console.log(\"On Change\");\r\n        setText(event.target.value)\r\n    }\r\n  return (\r\n    <>\r\n    \r\n    <div>\r\n        <div className=\"my-3\" style={{color: props.mode==='light'?'gray':'white'}}>\r\n        <h1 >{props.heading}</h1>\r\n        {/* <label for=\"mybox\" className=\"form-label\">Example textarea</label> */}\r\n\r\n        <textarea className=\"form-control\" placeholder='Enter text here' value={text} onChange={handleOnChange} \r\n        style={{backgroundColor: props.mode==='dark'?'#7ac7e1':'white',color:props.mode==='light'?'gray':'white' }} id=\"mybox\" rows=\"8\"></textarea>\r\n        \r\n      </div>\r\n    <button disabled={text.length===0} className=\"btn btn-primary \" onClick={handleUpClick}>Convert to Uppercase</button>\r\n    <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleLowerClick}>Convert to Lowercase</button>\r\n    <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleCapitalClick}>Capitlize Text</button>\r\n    <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleCopyClick}>Copy Text</button>\r\n    <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleremovespace}>Remove Extra Space</button>\r\n    <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleClearClick}>Clear Text</button>\r\n    </div>\r\n    \r\n    <div  className='my-2' style={{color: props.mode==='light'?'gray':'white'}}><h1>Text Summery</h1>\r\n    {/* Calculates the total number of words and character in text box */}\r\n    <h5>{text.split(\" \").filter((element)=>{return element.length!==0}).length} words and {text.length} characters</h5> \r\n    <h5>{0.008 * text.split(\" \").filter((element)=>{return element.length!==0}).length} Minutes to read</h5>\r\n    <h3>Preview</h3>\r\n    <p>{text.length>0?text:\"Enter something in the textbox to preview\"}</p> \r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","\nimport { useState } from 'react';\nimport React from 'react';\nimport './App.css';\nimport Alert from './components/Alert';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  \n  const [mode, setMode]=useState('light');\n\n  const [alert, setAlert]=useState(null);\n\n  const showAlert= (message, type) =>{\n    setAlert({\n      msg: message,\n      typ: type\n    })\n\n    setTimeout(() => {\n      setAlert(null)\n    }, 1500);\n  }\n\n  const togglemode=()=>{\n    if(mode==='light'){\n      setMode('dark')\n      document.body.style.backgroundColor='#022733'; \n      showAlert(\"Dark Mode Enabled!\", \"success\")\n      document.title= \"TextUtils - Dark Mode\"\n    }\n    else{\n      setMode('light')\n      document.body.style.backgroundColor='white';\n      showAlert(\"Light Mode Enabled!\", \"success\");\n      document.title= \"TextUtils - Light Mode\"\n    }\n  }\n  return (\n    <> \n    \n    {/* <Navbar /> when values are not passed, default values will be appered from navbar default props */}\n\n        <Navbar title = \"TextUtils\" aboutText=\"About TextUtils\" mode={mode} togglemode={togglemode}/>\n        <Alert alert={alert}/>\n        <div className=\"container my-3\">\n            <Textform showAlert={showAlert} heading = \"Word Counter and Character Counter\" mode={mode}/>\n        </div>\n       <About mode={mode}/>\n          \n  </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}